Label,Description,Expression,DRIVEALONEFREE,SHARED2FREE,SHARED3FREE,WALK,BIKE,WALK_LOC,WALK_LR,WALK_FRY,WALK_COM,DRIVE_TRN,TNC_SINGLE
#,Drive alone ,,,,,,,,,,,,
util_DRIVEALONEFREE_Unavailable,DRIVEALONEFREE - Unavailable,sov_available == False,-999,,,,,,,,,,
util_DRIVEALONEFREE_Unavailable_for_zero_auto_households,DRIVEALONEFREE - Unavailable for zero auto households,auto_ownership == 0,-999,,,,,,,,,,
util_DRIVEALONEFREE_Unavailable_for_persons_less_than_16,DRIVEALONEFREE - Unavailable for persons less than 16,age < 16,-999,,,,,,,,,,
util_DRIVEALONEFREE_Unavailable_for_joint_tours,DRIVEALONEFREE - Unavailable for joint tours,is_joint == True,-999,,,,,,,,,,
util_DRIVEALONEFREE_Unavailable_if_didn't_drive_to_work,DRIVEALONEFREE - Unavailable if didn't drive to work,is_atwork_subtour & ~work_tour_is_SOV,-999,,,,,,,,,,
util_DRIVEALONEFREE_In_vehicle_time,DRIVEALONEFREE - In-vehicle time,@odt_skims['SOV_TIME'] + dot_skims['SOV_TIME'],coef_ivt,,,,,,,,,,
util_DRIVEALONEFREE_Terminal_time,DRIVEALONEFREE - Terminal time,@2 * walktimeshort_multiplier * df.terminal_time,coef_ivt,,,,,,,,,,
util_DRIVEALONEFREE_Operating_cost,DRIVEALONEFREE - Operating cost,@ivt_cost_multiplier * df.ivot * costPerMile * (odt_skims['SOV_DIST'] + dot_skims['SOV_DIST']),coef_ivt,,,,,,,,,,
util_DRIVEALONEFREE_Parking_cost,DRIVEALONEFREE - Parking cost,@ivt_cost_multiplier * df.ivot * df.daily_parking_cost,coef_ivt,,,,,,,,,,
util_DRIVEALONEFREE_Value_toll,DRIVEALONEFREE- Value toll,@ivt_cost_multiplier * df.ivot * (odt_skims['SOVTOLL_VTOLL'] + dot_skims['SOVTOLL_VTOLL']),coef_ivt,,,,,,,,,,
util_DRIVEALONEFREE_Bridge_toll,DRIVEALONEFREE - Bridge toll,@ivt_cost_multiplier * df.ivot * (odt_skims['SOV_BTOLL'] + dot_skims['SOV_BTOLL']),coef_ivt,,,,,,,,,,
util_DRIVEALONEFREE_Person_is_between_16_and_19_years_old,DRIVEALONEFREE - Person is between 16 and 19 years old,@(df.age >= 16) & (df.age <= 19),coef_age1619_da_multiplier,,,,,,,,,,
#,Shared ride 2,,,,,,,,,,,,
util_SHARED2FREE_Unavailable,SHARED2FREE - Unavailable,hov2_available == False,,-999,,,,,,,,,
util_SHARED2FREE_Unavailable_based_on_party_size,SHARED2FREE - Unavailable based on party size,is_joint & (number_of_participants > 2),,-999,,,,,,,,,
util_SHARED2FREE_In_vehicle_time,SHARED2FREE - In-vehicle time,@(odt_skims['HOV2_TIME'] + dot_skims['HOV2_TIME']),,coef_ivt,,,,,,,,,
util_SHARED2FREE_Terminal_time,SHARED2FREE - Terminal time,@2 * walktimeshort_multiplier * df.terminal_time,,coef_ivt,,,,,,,,,
util_SHARED2FREE_Operating_cost,SHARED2FREE - Operating cost,@ivt_cost_multiplier * df.ivot * costPerMile * (odt_skims['HOV2_DIST'] + dot_skims['HOV2_DIST']),,coef_ivt,,,,,,,,,
util_SHARED2FREE_Parking_cost,SHARED2FREE - Parking cost,@ivt_cost_multiplier * df.ivot * df.daily_parking_cost / costShareSr2,,coef_ivt,,,,,,,,,
util_SHARED2FREE_Value_toll,SHARED2FREE - Value toll,@ivt_cost_multiplier * df.ivot * (odt_skims['HOV2TOLL_VTOLL'] + dot_skims['HOV2TOLL_VTOLL']) / costShareSr2,,coef_ivt,,,,,,,,,
util_SHARED2FREE_Bridge_toll,SHARED2FREE - Bridge toll,@ivt_cost_multiplier * df.ivot * (odt_skims['HOV2_BTOLL'] + dot_skims['HOV2_BTOLL']) / costShareSr2,,coef_ivt,,,,,,,,,
util_SHARED2FREE_One_person_household,SHARED2FREE - One person household,@(df.hhsize == 1),,coef_hhsize1_sr_multiplier,,,,,,,,,
util_SHARED2FREE_Two_person_household,SHARED2FREE - Two person household,@(df.hhsize == 2),,coef_hhsize2_sr_multiplier,,,,,,,,,
util_SHARED2FREE_Person_is_16_years_old_or_older,SHARED2FREE - Person is 16 years old or older,@(df.age >= 16),,coef_age16p_sr_multiplier,,,,,,,,,
#,Shared ride 3+,,,,,,,,,,,,
util_SHARED3FREE_Unavailable,SHARED3FREE - Unavailable,hov3_available == False,,,-999,,,,,,,,
util_SHARED3FREE_In_vehicle_time,SHARED3FREE - In-vehicle time,@(odt_skims['HOV3_TIME'] + dot_skims['HOV3_TIME']),,,coef_ivt,,,,,,,,
util_SHARED3FREE_Terminal_time,SHARED3FREE - Terminal time,@2 * walktimeshort_multiplier * df.terminal_time,,,coef_ivt,,,,,,,,
util_SHARED3FREE_Operating_cost,SHARED3FREE - Operating cost,@ivt_cost_multiplier * df.ivot * costPerMile * (odt_skims['HOV3_DIST'] + dot_skims['HOV3_DIST']),,,coef_ivt,,,,,,,,
util_SHARED3FREE_Parking_cost,SHARED3FREE - Parking cost,@ivt_cost_multiplier * df.ivot *  df.daily_parking_cost / costShareSr3,,,coef_ivt,,,,,,,,
util_SHARED3FREE_Value_toll,SHARED3FREE - Value toll,@ivt_cost_multiplier * df.ivot * (odt_skims['HOV3TOLL_VTOLL'] + dot_skims['HOV3TOLL_VTOLL']) / costShareSr3,,,coef_ivt,,,,,,,,
util_SHARED3FREE_Bridge_toll,SHARED3FREE - Bridge toll,@ivt_cost_multiplier * df.ivot * (odt_skims['HOV3TOLL_BTOLL'] + dot_skims['HOV3TOLL_BTOLL']) / costShareSr3,,,coef_ivt,,,,,,,,
util_SHARED3FREE_One_person_household,SHARED3FREE - One person household,@(df.hhsize == 1),,,coef_hhsize1_sr_multiplier,,,,,,,,
util_SHARED3FREE_Two_person_household,SHARED3FREE - Two person household,@(df.hhsize == 2),,,coef_hhsize2_sr_multiplier,,,,,,,,
util_SHARED3FREE_Person_is_16_years_old_or_older,SHARED3FREE - Person is 16 years old or older,@(df.age >= 16),,,coef_age16p_sr_multiplier,,,,,,,,
#,Walk,,,,,,,,,,,,
#,FIXME - skims aren't symmetrical,so we have to make sure they can get back,,,,,,,,,,,
util_WALK_Time_up_to_2_miles,WALK - Time up to 2 miles,@walktimeshort_multiplier * (od_skims['DISTWALK'].clip(upper=walkThresh) + od_skims.reverse('DISTWALK').clip(upper=walkThresh))*60/walkSpeed,,,,coef_ivt,,,,,,,
util_WALK_Time_beyond_2_of_a_miles,WALK - Time beyond 2 of a miles,@walktimelong_multiplier * ((od_skims['DISTWALK'] - walkThresh).clip(lower=0) + (od_skims.reverse('DISTWALK') - walkThresh).clip(lower=0))*60/walkSpeed,,,,coef_ivt,,,,,,,
util_WALK_Destination_zone_densityIndex,WALK - Destination zone densityIndex,@density_index_multiplier * df.density_index,,,,coef_ivt,,,,,,,
util_WALK_Topology,WALK - Topology,@coef_topology_walk_multiplier * df.dest_topology,,,,coef_ivt,,,,,,,
#,Bike,,,,,,,,,,,,
#,FIXME - skims aren't symmetrical,so we have to make sure they can get back,,,,,,,,,,,
util_BIKE_Unavailable_if_didn't_bike_to_work,BIKE - Unavailable if didn't bike to work,is_atwork_subtour & ~work_tour_is_bike,,,,,-999,,,,,,
util_BIKE_Time_up_to_6_miles,BIKE - Time up to 6 miles,@biketimeshort_multiplier * (od_skims['DISTBIKE'].clip(upper=bikeThresh) + od_skims.reverse('DISTBIKE').clip(upper=bikeThresh))*60/bikeSpeed,,,,,coef_ivt,,,,,,
util_BIKE_Time_beyond_6_of_a_miles,BIKE - Time beyond 6 of a miles,@biketimelong_multiplier * ((od_skims['DISTBIKE']-bikeThresh).clip(lower=0) + (od_skims.reverse('DISTBIKE')-bikeThresh).clip(lower=0))*60/bikeSpeed,,,,,coef_ivt,,,,,,
util_BIKE_Destination_zone_densityIndex,BIKE - Destination zone densityIndex,@density_index_multiplier * df.density_index,,,,,coef_ivt,,,,,,
util_BIKE_Topology,BIKE - Topology,@coef_topology_bike_multiplier * df.dest_topology,,,,,coef_ivt,,,,,,
#,Walk to Local,,,,,,,,,,,,
util_WALK_LOC_Unavailable,WALK_LOC - Unavailable,walk_local_available == False,,,,,,-999,,,,,
util_WALK_LOC_In_vehicle_time,WALK_LOC - In-vehicle time,@(odt_skims['WLK_LOC_WLK_TOTIVT'] + dot_skims['WLK_LOC_WLK_TOTIVT']),,,,,,coef_ivt,,,,,
util_WALK_LOC_Short_iwait_time,WALK_LOC - Short iwait time,@short_i_wait_multiplier * ((odt_skims['WLK_LOC_WLK_IWAIT']).clip(upper=waitThresh) + (dot_skims['WLK_LOC_WLK_IWAIT']).clip(upper=waitThresh)),,,,,,coef_ivt,,,,,
util_WALK_LOC_Long_iwait_time,WALK_LOC - Long iwait time,@long_i_wait_multiplier * ((odt_skims['WLK_LOC_WLK_IWAIT']-waitThresh).clip(0) + (dot_skims['WLK_LOC_WLK_IWAIT']-waitThresh).clip(0)),,,,,,coef_ivt,,,,,
util_WALK_LOC_transfer_wait_time,WALK_LOC - transfer wait time,@xwait_multiplier * (odt_skims['WLK_LOC_WLK_XWAIT'] + dot_skims['WLK_LOC_WLK_XWAIT']),,,,,,coef_ivt,,,,,
util_WALK_LOC_number_of_transfers,WALK_LOC - number of transfers,@xfers_wlk_multiplier * ((odt_skims['WLK_LOC_WLK_BOARDS']-1).clip(0) + (dot_skims['WLK_LOC_WLK_BOARDS']-1).clip(0)),,,,,,coef_ivt,,,,,
util_WALK_LOC_Walk_access_time,WALK_LOC - Walk access time,@2 * wacc_multiplier * df.origin_walk_time,,,,,,coef_ivt,,,,,
util_WALK_LOC_Walk_egress_time,WALK_LOC - Walk egress time,@2 * wegr_multiplier * df.destination_walk_time,,,,,,coef_ivt,,,,,
util_WALK_LOC_Fare,WALK_LOC - Fare,@ivt_cost_multiplier * df.ivot * (odt_skims['WLK_LOC_WLK_FAR'] + dot_skims['WLK_LOC_WLK_FAR']),,,,,,coef_ivt,,,,,
util_WALK_LOC_Destination_zone_densityIndex,WALK_LOC - Destination zone densityIndex,@density_index_multiplier * df.dest_density_index,,,,,,coef_ivt,,,,,
util_WALK_LOC_Topology,WALK_LOC - Topology,@coef_topology_trn_multiplier * df.dest_topology,,,,,,coef_ivt,,,,,
util_WALK_LOC_Person_is_less_than_10_years_old,WALK_LOC - Person is less than 10 years old,@(df.age <= 10),,,,,,coef_age010_trn_multiplier,,,,,
#,Walk to Light rail,,,,,,,,,,,,
util_WALK_LR_Unavailable,WALK_LR - Unavailable,walk_light_rail_available == False,,,,,,,-999,,,,
util_WALK_LR_In_vehicle_time,WALK_LR - In-vehicle time,@(odt_skims['WLK_LR_WLK_TOTIVT'] + dot_skims['WLK_LR_WLK_TOTIVT']),,,,,,,coef_ivt,,,,
util_WALK_LR_In_vehicle_time_on_light_rail,WALK_LR - In-vehicle time on light rail,@(ivt_lrt_multiplier-1) * (odt_skims['WLK_LR_WLK_KEYIVT'] + dot_skims['WLK_LR_WLK_KEYIVT']),,,,,,,coef_ivt,,,,
util_WALK_LR_Short_iwait_time,WALK_LR - Short iwait time,@short_i_wait_multiplier * ((odt_skims['WLK_LR_WLK_IWAIT']).clip(upper=waitThresh) + (dot_skims['WLK_LR_WLK_IWAIT']).clip(upper=waitThresh)),,,,,,,coef_ivt,,,,
util_WALK_LR_Long_iwait_time,WALK_LR - Long iwait time,@long_i_wait_multiplier * ((odt_skims['WLK_LR_WLK_IWAIT']-waitThresh).clip(0) + (dot_skims['WLK_LR_WLK_IWAIT']-waitThresh).clip(0)),,,,,,,coef_ivt,,,,
util_WALK_LR_transfer_wait_time,WALK_LR - transfer wait time,@xwait_multiplier * (odt_skims['WLK_LR_WLK_XWAIT'] + dot_skims['WLK_LR_WLK_XWAIT']),,,,,,,coef_ivt,,,,
util_WALK_LR_number_of_transfers,WALK_LR - number of transfers,@xfers_wlk_multiplier * ((odt_skims['WLK_LR_WLK_BOARDS']-1).clip(0) + (dot_skims['WLK_LR_WLK_BOARDS']-1).clip(0)),,,,,,,coef_ivt,,,,
util_WALK_LR_Walk_access_time,WALK_LR - Walk access time,@2 * wacc_multiplier * df.origin_walk_time,,,,,,,coef_ivt,,,,
util_WALK_LR_Walk_egress_time,WALK_LR - Walk egress time,@2 * wegr_multiplier * df.destination_walk_time,,,,,,,coef_ivt,,,,
util_WALK_LR_Fare,WALK_LR - Fare,@ivt_cost_multiplier * df.ivot * (odt_skims['WLK_LR_WLK_FAR'] + dot_skims['WLK_LR_WLK_FAR']),,,,,,,coef_ivt,,,,
util_WALK_LR_Destination_zone_densityIndex,WALK_LR - Destination zone densityIndex,@density_index_multiplier * df.dest_density_index,,,,,,,coef_ivt,,,,
util_WALK_LR_Topology,WALK_LR - Topology,@coef_topology_trn_multiplier * df.dest_topology,,,,,,,coef_ivt,,,,
util_WALK_LR_Person_is_less_than_10_years_old,WALK_LR - Person is less than 10 years old,@(df.age <= 10),,,,,,,coef_age010_trn_multiplier,,,,
#,Walk to Ferry ASC,,,,,,,,,,,,
util_WALK_FRY_Unavailable,WALK_FRY - Unavailable,walk_ferry_available == False,,,,,,,,-999,,,
util_WALK_FRY_In_vehicle_time,WALK_FRY - In-vehicle time,@(odt_skims['WLK_FRY_WLK_TOTIVT'] + dot_skims['WLK_FRY_WLK_TOTIVT']),,,,,,,,coef_ivt,,,
util_WALK_FRY_In_vehicle_time_on_ferry,WALK_FRY - In-vehicle time on ferry,@(ivt_ferry_multiplier-1) * (odt_skims['WLK_FRY_WLK_KEYIVT'] + dot_skims['WLK_FRY_WLK_KEYIVT']),,,,,,,,coef_ivt,,,
util_WALK_FRY_Short_iwait_time,WALK_FRY - Short iwait time,@short_i_wait_multiplier * ((odt_skims['WLK_FRY_WLK_IWAIT']).clip(upper=waitThresh) + (dot_skims['WLK_FRY_WLK_IWAIT']).clip(upper=waitThresh)),,,,,,,,coef_ivt,,,
util_WALK_FRY_Long_iwait_time,WALK_FRY - Long iwait time,@long_i_wait_multiplier * ((odt_skims['WLK_FRY_WLK_IWAIT']-waitThresh).clip(0) + (dot_skims['WLK_FRY_WLK_IWAIT']-waitThresh).clip(0)),,,,,,,,coef_ivt,,,
util_WALK_FRY_transfer_wait_time,WALK_FRY - transfer wait time,@xwait_multiplier * (odt_skims['WLK_FRY_WLK_XWAIT'] + dot_skims['WLK_FRY_WLK_XWAIT']),,,,,,,,coef_ivt,,,
util_WALK_FRY_number_of_transfers,WALK_FRY - number of transfers,@xfers_wlk_multiplier * ((odt_skims['WLK_FRY_WLK_BOARDS']-1).clip(0) + (dot_skims['WLK_FRY_WLK_BOARDS']-1).clip(0)),,,,,,,,coef_ivt,,,
util_WALK_FRY_Walk_access_time,WALK_FRY - Walk access time,@2 * wacc_multiplier * df.origin_walk_time,,,,,,,,coef_ivt,,,
util_WALK_FRY_Walk_egress_time,WALK_FRY - Walk egress time,@wegr_multiplier * 2 *df.destination_walk_time,,,,,,,,coef_ivt,,,
util_WALK_FRY_Fare,WALK_FRY - Fare,@ivt_cost_multiplier * df.ivot * (odt_skims['WLK_FRY_WLK_FAR'] + dot_skims['WLK_FRY_WLK_FAR']),,,,,,,,coef_ivt,,,
util_WALK_FRY_Destination_zone_densityIndex,WALK_FRY - Destination zone densityIndex,@density_index_multiplier * df.dest_density_index,,,,,,,,coef_ivt,,,
util_WALK_FRY_Topology,WALK_FRY - Topology,@coef_topology_trn_multiplier * df.dest_topology,,,,,,,,coef_ivt,,,
util_WALK_FRY_Person_is_less_than_10_years_old,WALK_FRY - Person is less than 10 years old,@(df.age <= 10),,,,,,,,coef_age010_trn_multiplier,,,
#,Walk to Commuter rail,,,,,,,,,,,,
util_WALK_COM_Unavailable,WALK_COM - Unavailable,walk_commuter_available == False,,,,,,,,,-999,,
util_WALK_COM_In_vehicle_time,WALK_COM - In-vehicle time,@(odt_skims['WLK_COM_WLK_TOTIVT'] + dot_skims['WLK_COM_WLK_TOTIVT']),,,,,,,,,coef_ivt,,
util_WALK_COM_In_vehicle_time_on_commuter_rail,WALK_COM - In-vehicle time on commuter rail (incremental w/ ivt),@(ivt_com_multiplier - 1) * (odt_skims['WLK_COM_WLK_KEYIVT'] + dot_skims['WLK_COM_WLK_KEYIVT']),,,,,,,,,coef_ivt,,
util_WALK_COM_Short_iwait_time,WALK_COM - Short iwait time,@short_i_wait_multiplier * ((odt_skims['WLK_COM_WLK_IWAIT']).clip(upper=waitThresh) + (dot_skims['WLK_COM_WLK_IWAIT']).clip(upper=waitThresh)),,,,,,,,,coef_ivt,,
util_WALK_COM_Long_iwait_time,WALK_COM - Long iwait time,@long_i_wait_multiplier * ((odt_skims['WLK_COM_WLK_IWAIT']-waitThresh).clip(0) + (dot_skims['WLK_COM_WLK_IWAIT']-waitThresh).clip(0)),,,,,,,,,coef_ivt,,
util_WALK_COM_transfer_wait_time,WALK_COM - transfer wait time,@xwait_multiplier * (odt_skims['WLK_COM_WLK_XWAIT'] + dot_skims['WLK_COM_WLK_XWAIT']),,,,,,,,,coef_ivt,,
util_WALK_COM_number_of_transfers,WALK_COM - number of transfers,@xfers_wlk_multiplier * ((odt_skims['WLK_COM_WLK_BOARDS']-1).clip(0) + (dot_skims['WLK_COM_WLK_BOARDS']-1).clip(0)),,,,,,,,,coef_ivt,,
util_WALK_COM_Walk_access_time,WALK_COM - Walk access time,@2 * wacc_multiplier * df.origin_walk_time,,,,,,,,,coef_ivt,,
util_WALK_COM_Walk_egress_time,WALK_COM - Walk egress time,@2 * wegr_multiplier * df.destination_walk_time,,,,,,,,,coef_ivt,,
util_WALK_COM_Fare,WALK_COM - Fare,@ivt_cost_multiplier * df.ivot * (odt_skims['WLK_COM_WLK_FAR'] + dot_skims['WLK_COM_WLK_FAR']),,,,,,,,,coef_ivt,,
util_WALK_COM_Destination_zone_densityIndex,WALK_COM - Destination zone densityIndex,@density_index_multiplier * df.dest_density_index,,,,,,,,,coef_ivt,,
util_WALK_COM_Topology,WALK_COM - Topology,@coef_topology_trn_multiplier * df.dest_topology,,,,,,,,,coef_ivt,,
util_WALK_COM_Person_is_less_than_10_years_old,WALK_COM - Person is less than 10 years old,@(df.age < 10),,,,,,,,,coef_age010_trn_multiplier,,
#,Drive to Transit,,,,,,,,,,,,
util_DRIVE_TRN_Unavailable,DRIVE_TRN - Unavailable,drive_transit_available == False,,,,,,,,,,-999,
util_DRIVE_TRN_Unavailable_for_zero_auto_households,DRIVE_TRN - Unavailable for zero auto households,auto_ownership == 0,,,,,,,,,,-999,
util_DRIVE_TRN_Unavailable_for_persons_less_than_16,DRIVE_TRN - Unavailable for persons less than 16,age < 16,,,,,,,,,,-999,
util_DRIVE_TRN_In_vehicle_time,DRIVE_TRN - In-vehicle time,@(odt_skims['DRV_TRN_WLK_TOTIVT'] + dot_skims['WLK_TRN_DRV_TOTIVT']),,,,,,,,,,coef_ivt,
util_DRIVE_TRN_Short_iwait_time,DRIVE_TRN - Short iwait time,@short_i_wait_multiplier * ((odt_skims['DRV_TRN_WLK_IWAIT']).clip(upper=waitThresh) + (dot_skims['WLK_TRN_DRV_IWAIT']).clip(upper=waitThresh)),,,,,,,,,,coef_ivt,
util_DRIVE_TRN_Long_iwait_time,DRIVE_TRN - Long iwait time,@long_i_wait_multiplier * ((odt_skims['DRV_TRN_WLK_IWAIT']-waitThresh).clip(0) + (dot_skims['WLK_TRN_DRV_IWAIT']-waitThresh).clip(0)),,,,,,,,,,coef_ivt,
util_DRIVE_TRN_transfer_wait_time,DRIVE_TRN - transfer wait time,@xwait_multiplier * (odt_skims['DRV_TRN_WLK_XWAIT'] + dot_skims['WLK_TRN_DRV_XWAIT']),,,,,,,,,,coef_ivt,
util_DRIVE_TRN_number_of_transfers,DRIVE_TRN - number of transfers,@xfers_wlk_multiplier * ((odt_skims['DRV_TRN_WLK_BOARDS']-1).clip(0) + (dot_skims['WLK_TRN_DRV_BOARDS']-1).clip(0)),,,,,,,,,,coef_ivt,
util_DRIVE_TRN_Drive_time,DRIVE_TRN - Drive time,@dtim_multiplier * (odt_skims['DRV_TRN_WLK_DTIM'] + dot_skims['WLK_TRN_DRV_DTIM']),,,,,,,,,,coef_ivt,
util_DRIVE_TRN_Walk_access_time,DRIVE_TRN - Walk access time,@wacc_multiplier * df.destination_walk_time,,,,,,,,,,coef_ivt,
util_DRIVE_TRN_Walk_egress_time,DRIVE_TRN - Walk egress time (at attraction end),@wegr_multiplier * df.destination_walk_time,,,,,,,,,,coef_ivt,
util_DRIVE_TRN_Fare_and_operating_cost,DRIVE_TRN - Fare and operating cost,@ivt_cost_multiplier * df.ivot * ((odt_skims['DRV_TRN_WLK_FAR'] + dot_skims['WLK_TRN_DRV_FAR']) + ((odt_skims['DRV_TRN_WLK_DDIST']+dot_skims['WLK_TRN_DRV_DDIST']) * costPerMile)),,,,,,,,,,coef_ivt,
util_DRIVE_TRN_Ratio_of_drive_access_distance_to_OD_distance,DRIVE_TRN - Ratio of drive access distance to OD distance,@dacc_ratio * ((odt_skims['DRV_TRN_WLK_DDIST']+ dot_skims['WLK_TRN_DRV_DDIST'])/ (od_skims['DIST']*2)),,,,,,,,,,1,
util_DRIVE_TRN_Destination_zone_densityIndex,DRIVE_TRN - Destination zone densityIndex,@density_index_multiplier * df.dest_density_index,,,,,,,,,,coef_ivt,
util_DRIVE_TRN_Topology,DRIVE_TRN - Topology,@coef_topology_trn_multiplier * df.dest_topology,,,,,,,,,,coef_ivt,
util_DRIVE_TRN_Person_is_less_than_10_years_old,DRIVE_TRN - Person is less than 10 years old,@(df.age < 10),,,,,,,,,,coef_age010_trn_multiplier,
#,Taxi,,,,,,,,,,,,
util_Taxi_In_vehicle_time,Taxi - In-vehicle time,@(odt_skims['HOV2TOLL_TIME'] + dot_skims['HOV2TOLL_TIME']),,,,,,,,,,,
#, FIXME magic constant 1.5,,,,,,,,,,,,
util_Taxi_Wait_time,Taxi - Wait time,@1.5 * df.totalWaitTaxi,,,,,,,,,,,
util_Taxi_Tolls,Taxi - Tolls,@ivt_cost_multiplier * df.ivot * (odt_skims['HOV2TOLL_VTOLL'] + dot_skims['HOV2TOLL_VTOLL']),,,,,,,,,,,
util_Taxi_Bridge_toll,Taxi - Bridge toll,@ivt_cost_multiplier * df.ivot * (odt_skims['HOV2TOLL_BTOLL'] + dot_skims['HOV2TOLL_BTOLL']),,,,,,,,,,,
util_Taxi_Fare,Taxi - Fare,@ivt_cost_multiplier * df.ivot * (Taxi_baseFare * 2 + (odt_skims['HOV2TOLL_DIST'] + dot_skims['HOV2TOLL_DIST']) * Taxi_costPerMile +(odt_skims['HOV2TOLL_TIME'] + dot_skims['HOV2TOLL_TIME']) * Taxi_costPerMinute)*100,,,,,,,,,,,
#,TNC Single,,,,,,,,,,,,
util_TNC_Single_In_vehicle_time,TNC Single - In-vehicle time,@(odt_skims['HOV2TOLL_TIME'] + dot_skims['HOV2TOLL_TIME']),,,,,,,,,,,coef_ivt
util_TNC_Single_Wait_time,TNC Single - Wait time,@1.5 * df.totalWaitSingleTNC,,,,,,,,,,,coef_ivt
util_TNC_Single_Tolls,TNC Single - Tolls,@ivt_cost_multiplier * df.ivot * (odt_skims['HOV2TOLL_VTOLL'] + dot_skims['HOV2TOLL_VTOLL']),,,,,,,,,,,coef_ivt
util_TNC_Single_Bridge_toll,TNC Single - Bridge toll,@ivt_cost_multiplier * df.ivot * (odt_skims['HOV2TOLL_BTOLL'] + odr_skims['HOV2TOLL_BTOLL'] + dot_skims['HOV2TOLL_BTOLL'] + dor_skims['HOV2TOLL_BTOLL']),,,,,,,,,,,coef_ivt
util_TNC_Single_Cost,TNC Single - Cost,"@ivt_cost_multiplier * df.ivot * np.maximum(TNC_single_baseFare * 2 + (odt_skims['HOV2TOLL_DIST'] + dot_skims['HOV2TOLL_DIST']) * TNC_single_costPerMile + (odt_skims['HOV2TOLL_TIME'] + dot_skims['HOV2TOLL_TIME']) * TNC_single_costPerMinute, TNC_single_costMinimum) * 100",,,,,,,,,,,coef_ivt
#,TNC Shared,,,,,,,,,,,,
util_TNC_Shared_In_vehicle_time,TNC Shared - In-vehicle time,@(odt_skims['HOV2TOLL_TIME'] + dot_skims['HOV2TOLL_TIME']) * TNC_shared_IVTFactor,,,,,,,,,,,
#, FIXME magic constant 1.5,,,,,,,,,,,,
util_TNC_Shared_Wait_time,TNC Shared - Wait time,@1.5 * df.totalWaitSharedTNC,,,,,,,,,,,
util_TNC_Shared_Tolls,TNC Shared - Tolls,@ivt_cost_multiplier * df.ivot * (odt_skims['HOV2TOLL_VTOLL'] + dot_skims['HOV2TOLL_VTOLL']),,,,,,,,,,,
util_TNC_Shared_Bridge_toll,TNC Shared - Bridge toll,@ivt_cost_multiplier * df.ivot * (odt_skims['HOV2TOLL_BTOLL'] + odr_skims['HOV2TOLL_BTOLL'] + dot_skims['HOV2TOLL_BTOLL'] + dor_skims['HOV2TOLL_BTOLL']),,,,,,,,,,,
util_TNC_Shared_Cost,TNC Shared - Cost,"@ivt_cost_multiplier * df.ivot * np.maximum(TNC_shared_baseFare * 2 + (odt_skims['HOV2TOLL_DIST'] + dot_skims['HOV2TOLL_DIST']) * TNC_shared_costPerMile + (odt_skims['HOV2TOLL_TIME'] + dot_skims['HOV2TOLL_TIME']) * TNC_shared_costPerMinute, TNC_shared_costMinimum) * 100",,,,,,,,,,,
#,indiv tour ASCs,,,,,,,,,,,,
util_Walk_ASC_Zero_auto,Walk ASC - Zero auto,@(df.is_indiv & (df.auto_ownership == 0)),,,,walk_ASC_no_auto,,,,,,,
util_Walk_ASC_Auto_deficient,Walk ASC - Auto deficient,@(df.is_indiv & (df.auto_ownership < df.num_workers) & (df.auto_ownership > 0)),,,,walk_ASC_auto_deficient,,,,,,,
util_Walk_ASC_Auto_sufficient,Walk ASC - Auto sufficient,@(df.is_indiv & (df.auto_ownership >= df.num_workers)),,,,walk_ASC_auto_sufficient,,,,,,,
util_Bike_ASC_Zero_auto,Bike ASC - Zero auto,@(df.is_indiv & (df.auto_ownership == 0)),,,,,bike_ASC_no_auto,,,,,,
util_Bike_ASC_Auto_deficient,Bike ASC - Auto deficient,@(df.is_indiv & (df.auto_ownership < df.num_workers) & (df.auto_ownership > 0)),,,,,bike_ASC_auto_deficient,,,,,,
util_Bike_ASC_Auto_sufficient,Bike ASC - Auto sufficient,@(df.is_indiv & (df.auto_ownership >= df.num_workers)),,,,,bike_ASC_auto_sufficient,,,,,,
util_Shared_ride_2_ASC_Zero_auto,Shared ride 2 ASC - Zero auto,@(df.is_indiv & (df.auto_ownership == 0)),,sr2_ASC_no_auto,,,,,,,,,
util_Shared_ride_2_ASC_Auto_deficient,Shared ride 2 ASC - Auto deficient,@(df.is_indiv & (df.auto_ownership < df.num_workers) & (df.auto_ownership > 0)),,sr2_ASC_auto_deficient,,,,,,,,,
util_Shared_ride_2_ASC_Auto_sufficient,Shared ride 2 ASC - Auto sufficient,@(df.is_indiv & (df.auto_ownership >= df.num_workers)),,sr2_ASC_auto_sufficient,,,,,,,,,
util_Shared_ride_3p_Zero_auto,Shared ride 3+ - Zero auto,@(df.is_indiv & (df.auto_ownership == 0)),,,sr3p_ASC_no_auto,,,,,,,,
util_Shared_ride_3p_Auto_deficient,Shared ride 3+ - Auto deficient,@(df.is_indiv & (df.auto_ownership < df.num_workers) & (df.auto_ownership > 0)),,,sr3p_ASC_auto_deficient,,,,,,,,
util_Shared_ride_3p_Auto_sufficient,Shared ride 3+ - Auto sufficient,@(df.is_indiv & (df.auto_ownership >= df.num_workers)),,,sr3p_ASC_auto_sufficient,,,,,,,,
util_Walk_to_Transit_Zero_auto,Walk to Transit - Zero auto,@(df.is_indiv & (df.auto_ownership == 0)),,,,,,walk_transit_ASC_no_auto,walk_transit_ASC_no_auto,walk_transit_ASC_no_auto,walk_transit_ASC_no_auto,,
util_Walk_to_Transit_Auto_deficient,Walk to Transit - Auto deficient,@(df.is_indiv & (df.auto_ownership < df.num_workers) & (df.auto_ownership > 0)),,,,,,walk_transit_ASC_auto_deficient,walk_transit_ASC_auto_deficient,walk_transit_ASC_auto_deficient,walk_transit_ASC_auto_deficient,,
util_Walk_to_Transit_Auto_sufficient,Walk to Transit - Auto sufficient,@(df.is_indiv & (df.auto_ownership >= df.num_workers)),,,,,,walk_transit_ASC_auto_sufficient,walk_transit_ASC_auto_sufficient,walk_transit_ASC_auto_sufficient,walk_transit_ASC_auto_sufficient,,
util_Drive_to_Transit_Zero_auto,Drive to Transit - Zero auto,@(df.is_indiv & (df.auto_ownership == 0)),,,,,,,,,,drive_transit_ASC_no_auto,
util_Drive_to_Transit_Auto_deficient,Drive to Transit - Auto deficient,@(df.is_indiv & (df.auto_ownership < df.num_workers) & (df.auto_ownership > 0)),,,,,,,,,,drive_transit_ASC_auto_deficient,
util_Drive_to_Transit_Auto_sufficient,Drive to Transit - Auto sufficient,@(df.is_indiv & (df.auto_ownership >= df.num_workers)),,,,,,,,,,drive_transit_ASC_auto_sufficient,
util_TNC_Single_Zero_auto,TNC Single - Zero auto,@(df.is_indiv & (df.auto_ownership == 0)),,,,,,,,,,,tnc_single_ASC_no_auto
util_TNC_Single_Auto_deficient,TNC Single - Auto deficient,@(df.is_indiv & (df.auto_ownership < df.num_workers) & (df.auto_ownership > 0)),,,,,,,,,,,tnc_single_ASC_auto_deficient
util_TNC_Single_Auto_sufficient,TNC Single - Auto sufficient,@(df.is_indiv & (df.auto_ownership >= df.num_workers)),,,,,,,,,,,tnc_single_ASC_auto_sufficient
#,joint tour ASCs,,,,,,,,,,,,
util_Joint_Walk_ASC_Zero_auto,Joint - Walk ASC - Zero auto,@(df.is_joint & (df.auto_ownership == 0)),,,,joint_walk_ASC_no_auto,,,,,,,
util_Joint_Walk_ASC_Auto_deficient,Joint - Walk ASC - Auto deficient,@(df.is_joint & (df.auto_ownership < df.num_workers) & (df.auto_ownership > 0)),,,,joint_walk_ASC_auto_deficient,,,,,,,
util_Joint_Walk_ASC_Auto_sufficient,Joint - Walk ASC - Auto sufficient,@(df.is_joint & (df.auto_ownership >= df.num_workers)),,,,joint_walk_ASC_auto_sufficient,,,,,,,
util_Joint_Bike_ASC_Zero_auto,Joint - Bike ASC - Zero auto,@(df.is_joint & (df.auto_ownership == 0)),,,,,joint_bike_ASC_no_auto,,,,,,
util_Joint_Bike_ASC_Auto_deficient,Joint - Bike ASC - Auto deficient,@(df.is_joint & (df.auto_ownership < df.num_workers) & (df.auto_ownership > 0)),,,,,joint_bike_ASC_auto_deficient,,,,,,
util_Joint_Bike_ASC_Auto_sufficient,Joint - Bike ASC - Auto sufficient,@(df.is_joint & (df.auto_ownership >= df.num_workers)),,,,,joint_bike_ASC_auto_sufficient,,,,,,
util_Joint_Shared_ride_2_ASC_Zero_auto,Joint - Shared ride 2 ASC - Zero auto,@(df.is_joint & (df.auto_ownership == 0)),,joint_sr2_ASC_no_auto,,,,,,,,,
util_Joint_Shared_ride_2_ASC_Auto_deficient,Joint - Shared ride 2 ASC - Auto deficient,@(df.is_joint & (df.auto_ownership < df.num_workers) & (df.auto_ownership > 0)),,joint_sr2_ASC_auto_deficient,,,,,,,,,
util_Joint_Shared_ride_2_ASC_Auto_sufficient,Joint - Shared ride 2 ASC - Auto sufficient,@(df.is_joint & (df.auto_ownership >= df.num_workers)),,joint_sr2_ASC_auto_sufficient,,,,,,,,,
util_Joint_Shared_ride_3p_Zero_auto,Joint - Shared ride 3+ - Zero auto,@(df.is_joint & (df.auto_ownership == 0)),,,joint_sr3p_ASC_no_auto,,,,,,,,
util_Joint_Shared_ride_3p_Auto_deficient,Joint - Shared ride 3+ - Auto deficient,@(df.is_joint & (df.auto_ownership < df.num_workers) & (df.auto_ownership > 0)),,,joint_sr3p_ASC_auto_deficient,,,,,,,,
util_Joint_Shared_ride_3p_Auto_sufficient,Joint - Shared ride 3+ - Auto sufficient,@(df.is_joint & (df.auto_ownership >= df.num_workers)),,,joint_sr3p_ASC_auto_sufficient,,,,,,,,
util_Joint_Walk_to_Transit_Zero_auto,Joint - Walk to Transit - Zero auto,@(df.is_joint & (df.auto_ownership == 0)),,,,,,joint_walk_transit_ASC_no_auto,joint_walk_transit_ASC_no_auto,joint_walk_transit_ASC_no_auto,joint_walk_transit_ASC_no_auto,,
util_Joint_Walk_to_Transit_Auto_deficient,Joint - Walk to Transit - Auto deficient,@(df.is_joint & (df.auto_ownership < df.num_workers) & (df.auto_ownership > 0)),,,,,,joint_walk_transit_ASC_auto_deficient,joint_walk_transit_ASC_auto_deficient,joint_walk_transit_ASC_auto_deficient,joint_walk_transit_ASC_auto_deficient,,
util_Joint_Walk_to_Transit_Auto_sufficient,Joint - Walk to Transit - Auto sufficient,@(df.is_joint & (df.auto_ownership >= df.num_workers)),,,,,,joint_walk_transit_ASC_auto_sufficient,joint_walk_transit_ASC_auto_sufficient,joint_walk_transit_ASC_auto_sufficient,joint_walk_transit_ASC_auto_sufficient,,
util_Joint_Drive_to_Transit_Zero_auto,Joint - Drive to Transit - Zero auto,@(df.is_joint & (df.auto_ownership == 0)),,,,,,,,,,joint_drive_transit_ASC_no_auto,
util_Joint_Drive_to_Transit_Auto_deficient,Joint - Drive to Transit - Auto deficient,@(df.is_joint & (df.auto_ownership < df.num_workers) & (df.auto_ownership > 0)),,,,,,,,,,joint_drive_transit_ASC_auto_deficient,
util_Joint_Drive_to_Transit_Auto_sufficient,Joint - Drive to Transit - Auto sufficient,@(df.is_joint & (df.auto_ownership >= df.num_workers)),,,,,,,,,,joint_drive_transit_ASC_auto_sufficient,
util_Joint_TNC_Single_Zero_auto,Joint - TNC Single - Zero auto,@(df.is_joint & (df.auto_ownership == 0)),,,,,,,,,,,joint_tnc_single_ASC_no_auto
util_Joint_TNC_Single_Auto_deficient,Joint - TNC Single - Auto deficient,@(df.is_joint & (df.auto_ownership < df.num_workers) & (df.auto_ownership > 0)),,,,,,,,,,,joint_tnc_single_ASC_auto_deficient
util_Joint_TNC_Single_Auto_sufficient,Joint - TNC Single - Auto sufficient,@(df.is_joint & (df.auto_ownership >= df.num_workers)),,,,,,,,,,,joint_tnc_single_ASC_auto_sufficient
util_Local_bus_ASC,Local bus ASC,1,,,,,,local_bus_ASC,,,,local_bus_ASC,
util_Walk_to_Light_Rail_ASC,Walk to Light Rail ASC,1,,,,,,,walk_light_rail_ASC,,,,
util_Walk_to_Ferry_ASC,Walk to Ferry ASC,1,,,,,,,walk_ferry_ASC,,,,
util_Express_Bus_ASC,Express Bus ASC,1,,,,,,,,,,,
util_Heavy_Rail_ASC,Heavy Rail ASC,1,,,,,,,,heavy_rail_ASC,,,
util_Commuter_Rail,Commuter Rail,1,,,,,,,,,commuter_rail_ASC,,
util_Walk_to_Transit_dest_CBD,Walk to Transit dest CBD,@df.destination_in_cbd,,,,,,walk_transit_CBD_ASC,walk_transit_CBD_ASC,walk_transit_CBD_ASC,walk_transit_CBD_ASC,,
util_Drive_to_Transit_dest_CBD,Drive to Transit dest CBD,@df.destination_in_cbd,,,,,,,,,,drive_transit_CBD_ASC,
util_Drive_to_Transit_distance_penalty,Drive to Transit - distance penalty,@drvtrn_distpen_0_multiplier * (1-od_skims['DIST']/drvtrn_distpen_max).clip(lower=0),,,,,,,,,,coef_ivt,
#, FIXME - skims aren't symmetrical,so we have to make sure they can get back,,,,,,,,,,,
util_Walk_not_available_for_long_distances,Walk not available for long distances,@od_skims.max('DISTWALK') > 3,,,,-999,,,,,,,
util_Bike_not_available_for_long_distances,Bike not available for long distances,@od_skims.max('DISTBIKE') > 8,,,,,-999,,,,,,
util_Drive_alone_not_available_for_escort_tours,Drive alone not available for escort tours,is_escort,-999,,,,,,,,,,
#, max(c_densityIndexOrigin*originDensityIndex,originDensityIndexMax),,,,,,1,1,1,1,1,
